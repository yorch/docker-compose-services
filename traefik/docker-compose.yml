version: "3"

services:
  traefik:
    image: traefik:v2.8
    container_name: traefik2
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    networks:
      - gitea
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data:/opt/traefik
      - ./logs:/opt/logs
    command:
      # Dashboard
      - "--api" # Enables the web UI
      - "--global.sendanonymoususage=false"
      # Entrypoints (with HTTPS redirect)
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--entrypoints.websecure.address=:443"
      # Let's Encrypt
      - "--certificatesResolvers.webcert.acme.email=${ACME_EMAIL?Variable ACME_EMAIL not set}"
      - "--certificatesResolvers.webcert.acme.tlschallenge=true"
      - "--certificatesResolvers.webcert.acme.storage=/opt/traefik/acme.json"
      # Docker Provider
      - "--providers.docker" # Tells Traefik to listen to docker
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.watch"
      # Logging
      - "--accesslog"
      - "--log"
      - "--log.level=${TRAEFIK_LOG_LEVEL:-INFO}"
      # - "--log.filePath=/opt/logs/traefik.log"
      # - "--log.format=json"
      # Metrics (Influx v1)
      # - "--metrics.influxdb=true"
      # - "--metrics.influxdb.address=${INFLUXDB_HOST}" # Should looks like `influxdb:8086`
      # - "--metrics.influxdb.database=${INFLUXDB_DATABASE}"
      # - "--metrics.influxdb.username=${INFLUXDB_USERNAME}"
      # - "--metrics.influxdb.password=${INFLUXDB_PASSWORD}"
      # Metrics (Influx v2)
      # - "--metrics.influxdb2=true"
      # - "--metrics.influxdb2.address=${INFLUXDB2_URL}" # Should looks like `http://influxdb:8086`
      # - "--metrics.influxdb2.token=${INFLUXDB2_TOKEN}"
      # - "--metrics.influxdb2.org=${INFLUXDB2_ORG}"
      # - "--metrics.influxdb2.bucket=${INFLUXDB2_BUCKET}"
      # - "--metrics.influxdb2.addEntryPointsLabels=true"
      # - "--metrics.influxdb2.addrouterslabels=true"
      # - "--metrics.influxdb2.addServicesLabels=true"
      # - "--metrics.influxdb2.pushInterval=10s"
      # - "--metrics.influxdb2.additionallabels.host=traefik.${DOMAIN}"
    labels:
      - "traefik.enable=true"
      # Global Middlewares
      - "traefik.http.middlewares.global-auth.basicauth.users=${USERNAME?Variable USERNAME not set}:${HASHED_PASSWORD?Variable HASHED_PASSWORD not set}"
      # HTTPS Host
      - "traefik.http.routers.traefik-api-secured.rule=Host(`traefik.${DOMAIN?Variable DOMAIN not set}`)"
      - "traefik.http.routers.traefik-api-secured.entrypoints=websecure"
      - "traefik.http.routers.traefik-api-secured.tls=true"
      - "traefik.http.routers.traefik-api-secured.tls.certResolver=webcert"
      - "traefik.http.routers.traefik-api-secured.service=api@internal"
      # Auth
      - "traefik.http.routers.traefik-api-secured.middlewares=global-auth"

networks:
  traefik:
    external: false
