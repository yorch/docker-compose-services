services:
  app:
    image: supabase/logflare:1.12.5
    restart: unless-stopped
    hostname: 127.0.0.1
    environment:
      - DB_DATABASE=${POSTGRES_DB}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_USERNAME=${POSTGRES_USER}
      - DB_HOSTNAME=db
      - DB_PORT=5432
      - LOGFLARE_SINGLE_TENANT=true
      - LOGFLARE_API_KEY=${LOGFLARE_API_KEY}
      - PHX_HTTP_PORT=${LOGFLARE_PORT}

      # Required for BigQuery backend
      # - GOOGLE_DATASET_ID_APPEND=${GOOGLE_DATASET_ID_APPEND}
      # - GOOGLE_PROJECT_ID=${GOOGLE_PROJECT_ID}
      # - GOOGLE_PROJECT_NUMBER=${GOOGLE_PROJECT_NUMBER}

      # Required for Postgres backend
      - POSTGRES_BACKEND_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - POSTGRES_BACKEND_SCHEMA=${POSTGRES_DB}
    volumes:
      # - type: bind
      #   source: ${PWD}/.env
      #   target: /tmp/.secrets.env
      #   read_only: true
      - type: bind
        source: ${PWD}/data/gcloud.json
        target: /opt/app/rel/logflare/bin/gcloud.json
        read_only: true
    depends_on:
      - db

  db:
    image: postgres:16-alpine
    restart: unless-stopped
    volumes:
      - ./setup.sql:/docker-entrypoint-initdb.d/setup.sql
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    healthcheck:
      test: pg_isready -U "$$POSTGRES_USER" -d "$$POSTGRES_DB"
      interval: 10s
      timeout: 2s
      retries: 10
